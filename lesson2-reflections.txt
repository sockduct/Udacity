####################################################################################################
What happens when you initialize a repository?  Why do you need to do it?
> Initializing a repo creates a .git folder which stores change info.
> To take advantage of git/source control for a directory, you need to create a repo for the
> directory.

How is the staging area different from the working directory and the repository?  What value do
you think if offers?
> Staging area is a temporary buffer between the working directory and the repo.  The staging area
> collects related files in preparation for a commit.  The staging area makes it easy to group
> related files into a commit without forcing everything to be done with one command.

How can you use the staging area to make sure you have one commit per logical change?
> The staging area allows you to use git diff to see what's changed.  You can use git diff to
> see the difference between the working directory and the staging area and you can use git diff
> --staged to see what's different between the staging area and the most recent commit.  By
> reviewing what you're going to commit, you can make sure it's just one logical change.

What are some situations when branches would be helpful in keeping your history organized? How
would branches help?
> Whenever you want to make a major change or experiment with something, a branch would be a
> useful way to separate the change from the current working version.

